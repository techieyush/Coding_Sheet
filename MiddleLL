

public class MiddleLinkedList {

    class Node{
        Node next;
        int data;
        Node(int data)
        {
            this.data=data;
        }
    }
    Node head;
    Node tail;
    int size;
    public void addFirst(int item) 
    {
        Node nn=new Node(item);
        if(this.size==0)
        {
            this.head=nn;
            this.tail=nn;
            this.size++;
        }
        else{
            nn.next=this.head;
            this.head=nn;
            this.size++;

        }
    }
    public void addLast(int item)
    {
      
        if(this.size==0)
        {
           addFirst(item);
        }
        else{
            Node nn=new Node(item);
            this.tail.next=nn;
            this.tail=nn;
            this.size++;

        }

    }



      public int middleNodeData(Node head)
    {
        Node slowPtr=head;
        Node fastPtr=head;
        while(fastPtr!=null && fastPtr.next!=null)
        {
            slowPtr=slowPtr.next;
            fastPtr=fastPtr.next.next;
        }
        return slowPtr.data;
    }

    public void display()
    {
        Node temp=this.head;
        while(temp!=null)
        {
            System.out.print(temp.data+"-->");
            temp=temp.next;
        }
        System.out.println(".");
    }
    public static void main(String[] args) {
        MiddleLinkedList ml=new MiddleLinkedList();
        ml.addFirst(10);
        ml.addLast(20);
        ml.addLast(30);
        ml.addLast(40);
        ml.addLast(50);
        ml.display();
        // System.out.println(ml.middleNodeData(10));
    }
    
}
